from flask import Flask, jsonify, request

app = Flask(__name__)

# Create an initial list of books
books = [
    {
        "id": 1,
        "book_name": "Harry Potter and the Philosopher's Stone",
        "author": "J.K. Rowling",
        "publisher": "Bloomsbury"
    },
    {
        "id": 2,
        "book_name": "The Lord of the Rings",
        "author": "J.R.R. Tolkien",
        "publisher": "Allen & Unwin"
    },
    {
        "id": 3,
        "book_name": "To Kill a Mockingbird",
        "author": "Harper Lee",
        "publisher": "J.B. Lippincott & Co."
    }
]

# Helper function to find a book by ID
def find_book_by_id(id):
    for book in books:
        if book['id'] == id:
            return book
    return None

# Endpoint to add a new book
@app.route('/api/books', methods=['POST'])
def add_book():
    new_book = request.get_json()
    new_book['id'] = len(books) + 1
    books.append(new_book)
    return jsonify(new_book), 201

# Endpoint to get all books
@app.route('/api/books', methods=['GET'])
def get_all_books():
    return jsonify(books)

# Endpoint to get a book by ID
@app.route('/api/books/<int:id>', methods=['GET'])
def get_book_by_id(id):
    book = find_book_by_id(id)
    if book:
        return jsonify(book)
    else:
        return jsonify({'error': 'Book not found'}), 404

# Endpoint to update a book by ID
@app.route('/api/books/<int:id>', methods=['PUT'])
def update_book_by_id(id):
    book = find_book_by_id(id)
    if book:
        book.update(request.get_json())
        return jsonify(book)
    else:
        return jsonify({'error': 'Book not found'}), 404

# Endpoint to delete a book by ID
@app.route('/api/books/<int:id>', methods=['DELETE'])
def delete_book_by_id(id):
    book = find_book_by_id(id)
    if book:
        books.remove(book)
        return jsonify({'message': 'Book deleted successfully'})
    else:
        return jsonify({'error': 'Book not found'}), 404

if __name__ == '__main__':
    app.run(debug=True)
