from Flask import Flask, jsonify, request

app = Flask(__name__)

# Initialize an in-memory database
books = []

# Helper function to find a book by ID
def find_book(book_id):
    for book in books:
        if book['id'] == book_id:
            return book
    return None

# POST /api/books
@app.route('/api/books', methods=['POST'])
def create_book():
    data = request.json
    book = {
        'id': len(books) + 1,
        'book_name': data['book_name'],
        'author': data['author'],
        'publisher': data['publisher']
    }
    books.append(book)
    return jsonify(book), 201

# GET /api/books
@app.route('/api/books', methods=['GET'])
def get_books():
    return jsonify(books)

# GET /api/books/{id}
@app.route('/api/books/<int:book_id>', methods=['GET'])
def get_book(book_id):
    book = find_book(book_id)
    if book is None:
        return jsonify({'message': 'Book not found'}), 404
    return jsonify(book)

# PUT /api/books/{id}
@app.route('/api/books/<int:book_id>', methods=['PUT'])
def update_book(book_id):
    book = find_book(book_id)
    if book is None:
        return jsonify({'message': 'Book not found'}), 404
    data = request.json
    book['book_name'] = data.get('book_name', book['book_name'])
    book['author'] = data.get('author', book['author'])
    book['publisher'] = data.get('publisher', book['publisher'])
    return jsonify(book)

# DELETE /api/books/{id}
@app.route('/api/books/<int:book_id>', methods=['DELETE'])
def delete_book(book_id):
    book = find_book(book_id)
    if book is None:
        return jsonify({'message': 'Book not found'}), 404
    books.remove(book)
    return jsonify({'message': 'Book deleted successfully'})

if __name__ == '__main__':
    app.run()


